/*
 * Frame.java
 */
package userInterface;

import java.awt.FileDialog;
import java.awt.Image;
import java.io.*;
import java.math.BigInteger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import secretsharing.Joining;
import secretsharing.Sharing;
import secretsharingException.JoiningException;
import secretsharingException.SharingException;
import steganography.Embedding;
import steganography.Extraction;
import steganographyException.SteganographyException;

public class Frame extends javax.swing.JFrame {

    /** Creates new form Frame */
    public Frame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelImage = new javax.swing.JLabel();
        jLabelMessage = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpenImage = new javax.swing.JMenuItem();
        jMenuItemSaveImage = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuCode = new javax.swing.JMenu();
        jMenuItemWriteCode = new javax.swing.JMenuItem();
        jMenuItemReadCode = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenuFile.setText("File");

        jMenuItemOpenImage.setText("Open Image");
        jMenuItemOpenImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItemOpenImageMousePressed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpenImage);

        jMenuItemSaveImage.setText("Save Image");
        jMenuItemSaveImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItemSaveImageMousePressed(evt);
            }
        });
        jMenuFile.add(jMenuItemSaveImage);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItemExitMousePressed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuCode.setText("Code");

        jMenuItemWriteCode.setText("Write Code");
        jMenuItemWriteCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItemWriteCodeMousePressed(evt);
            }
        });
        jMenuCode.add(jMenuItemWriteCode);

        jMenuItemReadCode.setText("Read Code");
        jMenuItemReadCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItemReadCodeMousePressed(evt);
            }
        });
        jMenuCode.add(jMenuItemReadCode);

        jMenuBar1.add(jMenuCode);

        jMenuHelp.setText("Help");

        jMenuItemAbout.setText("About");
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelImage)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelMessage)))
                .addContainerGap(624, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 445, Short.MAX_VALUE)
                .addComponent(jLabelMessage)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemOpenImageMousePressed
        FileDialog fd = new FileDialog(this, "Open Image");
        fd.setVisible(true);
        if (fd.getFile() == null) {
            JOptionPane.showMessageDialog(null, "Choose file", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        filename = fd.getDirectory() + fd.getFile();

        Image img = null;
        try {
            img = ImageIO.read(new File(filename));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ImageIcon icon = new ImageIcon(img);
        jLabelImage.setSize(600, 600);
        jLabelImage.setIcon(icon);
        try {
            embedding = new Embedding(filename);
        } catch (SteganographyException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        jLabelMessage.setText("");
    }//GEN-LAST:event_jMenuItemOpenImageMousePressed

    private void jMenuItemExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemExitMousePressed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitMousePressed

    private void jMenuItemSaveImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemSaveImageMousePressed
        if (embedding == null) {
            JOptionPane.showMessageDialog(null, "Before save, open image please", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        FileDialog fd = new FileDialog(this, "Save Image", FileDialog.SAVE);
        fd.setVisible(true);
        String name = fd.getDirectory() + fd.getFile();
        if (!filename.contains(".bmp")) {
            filename += ".bmp";
        }
        FileOutputStream saveImage = null;
        try {
            saveImage = new FileOutputStream(name);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            saveImage.write(embedding.head);
            saveImage.write(embedding.infohead);
            saveImage.write(embedding.getRgb());
            saveImage.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        jLabelMessage.setText("");
    }//GEN-LAST:event_jMenuItemSaveImageMousePressed

    private void jMenuItemWriteCodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemWriteCodeMousePressed
        WriteCodeDialog dlg = new WriteCodeDialog(this, true);
        dlg.setVisible(true);
        if ((dlg.message == null) || (dlg.shares == 0) || (dlg.threshold == 0) || (dlg.prime == null)) {
            JOptionPane.showMessageDialog(null, "Please enter correct data", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BigInteger message = new BigInteger(dlg.message);
        BigInteger prime = new BigInteger(dlg.prime);
        Sharing sharing = new Sharing(message, prime);
        BigInteger args[] = new BigInteger[dlg.shares];
        args[0] = prime.nextProbablePrime();
        for (int i = 1; i < args.length; i++) {
            args[i] = args[i - 1].nextProbablePrime();
        }
        BigInteger values[] = new BigInteger[dlg.shares];
        try {
            values = sharing.getShares(args, dlg.threshold, dlg.shares);
        } catch (SharingException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        try {
            embedding.writeSharesToSubImages(args, values);
            embedding.writeFileWithHash("properties");
        } catch (SteganographyException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        jLabelMessage.setText("");
    }//GEN-LAST:event_jMenuItemWriteCodeMousePressed

    private void jMenuItemReadCodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemReadCodeMousePressed

        ReadCodeDialog dlg = new ReadCodeDialog(this, true);
        dlg.setVisible(true);
        BigInteger prime = new BigInteger(dlg.prime);
        BigInteger message = null;
        Joining joining = new Joining(prime);
        try {
            Extraction extraction = new Extraction(filename, "properties");
            extraction.getSharesFromSubimages(dlg.threshold);
            try {
                message = joining.getMessage(extraction.args, extraction.values, dlg.threshold);
            } catch (JoiningException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SteganographyException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        jLabelMessage.setText(message.toString());
    }//GEN-LAST:event_jMenuItemReadCodeMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Frame().setVisible(true);
            }
        });
    }
    private Embedding embedding = null;
    private String filename = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCode;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemOpenImage;
    private javax.swing.JMenuItem jMenuItemReadCode;
    private javax.swing.JMenuItem jMenuItemSaveImage;
    private javax.swing.JMenuItem jMenuItemWriteCode;
    // End of variables declaration//GEN-END:variables
}
